@{  
   ViewData["title"] = "User Settings"; 
   ViewData["name"] = "userSettings";
   ViewData["style"] = "userSettings";
   Layout = "~/Views/Shared/_Layout.cshtml"; 
}

@section head {
   <script src="~/dist/userSettings.js"></script><!-- In the head to load drop-down properly since it is not created dynamically -->
}

<header>
    <a href="../" class="iconLink">
        <span id="backButton"
                class="icon icon-arrow-left"
                role="button">
                </span>
    </a>
    <h1>User Settings</h1>
    <hr />
</header>
<main>
    <h3>Change Password</h3>
    @model ChangePasswordViewModel
    <form asp-action="ChangePassword" method="post">
        <label class="error">@Html.ValidationMessageFor(m => m.CurrentPassword)</label>
        <input asp-for="CurrentPassword" class="input" placeholder="Current password..." />
        <label class="error">@Html.ValidationMessageFor(m => m.NewPassword)</label>
        <input asp-for="NewPassword" class="input" placeholder="New password..." />
        <label class="error">@Html.ValidationMessageFor(m => m.RepeatPassword)</label>
        <input asp-for="RepeatPassword" class="input" placeholder="Repeat password..." />
        <input type="submit" value="Change" />
    </form>

    <h3>Appearance</h3>
    <label>Theme: </label><drop-down id="themeSelect"></drop-down>

    <h3>Remove Account</h3>
    <button id="removeUserButton">Remove</button>
</main>
<script>
    const tempData = {
        message: '@TempData["message"]'
    };

    const viewData = {
        username: '@ViewData["username"]'
    }
</script>